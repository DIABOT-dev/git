# .github/workflows/ci.yml
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # 1) Chẩn đoán để nhìn rõ nguồn gốc cấu hình
      - name: Diagnose npm config
        run: |
          echo "NPM_CONFIG_USERCONFIG=${NPM_CONFIG_USERCONFIG}"
          npm config get registry || true
          npm config list || true
          [ -f .npmrc ] && echo "--- .npmrc ---" && cat .npmrc || true
          [ -f ~/.npmrc ] && echo "--- ~/.npmrc ---" && cat ~/.npmrc || true

      # 2) Trung hòa các file .npmrc và proxy “lạ”
      - name: Neutralize rogue npmrc / proxy
        shell: bash
        run: |
          rm -f .npmrc || true
          rm -f ~/.npmrc || true
          # Nếu runner có biến NPM_CONFIG_USERCONFIG, ép file đó về registry chuẩn
          if [ -n "${NPM_CONFIG_USERCONFIG:-}" ]; then
            echo "registry=https://registry.npmjs.org/" > "$NPM_CONFIG_USERCONFIG"
          fi
          npm config set registry https://registry.npmjs.org/
          npm config delete proxy || true
          npm config delete https-proxy || true
          npm config set strict-ssl true
          npm cache verify || true

      # 3) (Tuỳ chọn) Auth npm nếu cần kéo gói private
      - name: Authenticate to npm (optional)
        if: ${{ secrets.NPM_TOKEN != '' }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> "${NPM_CONFIG_USERCONFIG:-$HOME/.npmrc}"

      # 4) Cài đặt & kiểm tra Next
      - name: Install deps
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Check Next.js version
        run: npx --yes next@latest --version
