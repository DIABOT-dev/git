name: Deploy Camp

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    env:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}          # ubuntu
      VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
      IMAGE: ghcr.io/DIABOT-dev/git:${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Camp Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USER }}
          key: ${{ env.VPS_SSH_KEY }}
          script: |
            set -e

            # --- KHAI B√ÅO BI·∫æN TRONG SSH SESSION ---
            CAMP_PATH="/home/ubuntu/diabot_camp"
            IMAGE="${{ env.IMAGE }}"
            HEALTH_IP="${{ env.VPS_HOST }}"

            echo "üöÄ Starting Deploy Camp at ${CAMP_PATH}"

            # Ensure workdir
            mkdir -p "${CAMP_PATH}"
            cd "${CAMP_PATH}"

            # T·∫°o compose t·ªëi thi·ªÉu n·∫øu ch∆∞a c√≥
            if [ ! -f docker-compose.yml ]; then
              cat > docker-compose.yml <<'YAML'
              services:
                app:
                  image: REPLACE_IMAGE
                  container_name: diabot-app
                  restart: unless-stopped
                  ports:
                    - "3000:3000"
              YAML
              sed -i "s|REPLACE_IMAGE|${IMAGE}|g" docker-compose.yml
            fi

            echo "üì¶ Pull & restart"
            docker compose pull || true
            docker compose up -d || true

            echo "‚è≥ Wait..."
            sleep 10

            echo "ü©∫ Health check by IP:3000"
            curl -fsSL "http://${HEALTH_IP}:3000/api/qa/selftest" >/dev/null \
              || (echo "‚ùå Health check failed" && exit 1)

            echo "‚úÖ Deploy Camp OK"

      - name: Smoke test APIs (external by IP)
        run: |
          set -e
          BASE="http://${{ env.VPS_HOST }}:3000"
          echo "Testing ${BASE}"
          curl -s -o /dev/null -w "selftest=%{http_code}\n"  "$BASE/api/qa/selftest"
          curl -s -o /dev/null -w "chart7d=%{http_code}\n"   "$BASE/api/chart/7d" || true
          curl -s -o /dev/null -w "profile=%{http_code}\n"   "$BASE/api/profile"  || true
